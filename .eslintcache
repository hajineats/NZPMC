[{"/Users/hajin/Projects/NZPMC/app/src/index.js":"1","/Users/hajin/Projects/NZPMC/app/src/App.js":"2","/Users/hajin/Projects/NZPMC/app/src/reportWebVitals.js":"3","/Users/hajin/Projects/NZPMC/app/src/firebase-component/Login.js":"4","/Users/hajin/Projects/NZPMC/app/src/firebase-component/Firebase.js":"5","/Users/hajin/Projects/NZPMC/app/src/main-component/NZPMC.js":"6","/Users/hajin/Projects/NZPMC/app/src/admin-component/Admin.js":"7","/Users/hajin/Projects/NZPMC/app/src/firebase-component/FirebaseUI.js":"8","/Users/hajin/Projects/NZPMC/app/src/firebase-component/initialisation/UserInit.js":"9","/Users/hajin/Projects/NZPMC/app/src/firebase-component/initialisation/UserInitForm.js":"10","/Users/hajin/Projects/NZPMC/app/src/main-component/component/questionlist/QuestionList.js":"11","/Users/hajin/Projects/NZPMC/app/src/main-component/component/NavBar.js":"12","/Users/hajin/Projects/NZPMC/app/src/main-component/component/userpage/UserInfo.js":"13","/Users/hajin/Projects/NZPMC/app/src/main-component/component/currentquestion/QuestionPage.js":"14","/Users/hajin/Projects/NZPMC/app/src/main-component/component/userpage/UserDetailsAndInstructions.js":"15","/Users/hajin/Projects/NZPMC/app/src/main-component/component/currentquestion/Question.js":"16","/Users/hajin/Projects/NZPMC/app/src/main-component/component/currentquestion/QuestionUserInput.js":"17","/Users/hajin/Projects/NZPMC/app/src/firebase-component/FirebaseRequests.js":"18"},{"size":642,"mtime":1610357431703,"results":"19","hashOfConfig":"20"},{"size":1405,"mtime":1612065666213,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":1610177951919,"results":"22","hashOfConfig":"20"},{"size":1330,"mtime":1610359870979,"results":"23","hashOfConfig":"20"},{"size":502,"mtime":1610271210294,"results":"24","hashOfConfig":"20"},{"size":1077,"mtime":1610358848137,"results":"25","hashOfConfig":"20"},{"size":1567,"mtime":1610358172040,"results":"26","hashOfConfig":"20"},{"size":1316,"mtime":1610352739670,"results":"27","hashOfConfig":"20"},{"size":347,"mtime":1610271210299,"results":"28","hashOfConfig":"20"},{"size":3734,"mtime":1612067652256,"results":"29","hashOfConfig":"20"},{"size":3014,"mtime":1610873306632,"results":"30","hashOfConfig":"20"},{"size":1369,"mtime":1610352279043,"results":"31","hashOfConfig":"20"},{"size":1033,"mtime":1610357431706,"results":"32","hashOfConfig":"20"},{"size":2988,"mtime":1612052461949,"results":"33","hashOfConfig":"20"},{"size":3065,"mtime":1610352279043,"results":"34","hashOfConfig":"20"},{"size":1028,"mtime":1610357431704,"results":"35","hashOfConfig":"20"},{"size":2791,"mtime":1612048839702,"results":"36","hashOfConfig":"20"},{"size":992,"mtime":1612067681246,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"44s3x0",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"40"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/hajin/Projects/NZPMC/app/src/index.js",[],["82","83"],"/Users/hajin/Projects/NZPMC/app/src/App.js",[],"/Users/hajin/Projects/NZPMC/app/src/reportWebVitals.js",[],"/Users/hajin/Projects/NZPMC/app/src/firebase-component/Login.js",["84","85"],"import React, { useState } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Container from \"@material-ui/core/Container\";\nimport logo from \"../assets/nzpmc-logo.png\";\nimport UserInit from \"./initialisation/UserInit\";\nimport \"./Login.css\";\nimport \"firebaseui/dist/firebaseui.css\";\nimport FirebaseUI from \"./FirebaseUI\";\nimport firebase from \"./Firebase\";\nrequire(\"firebase/auth\");\nrequire(\"firebase/database\");\n\nexport default function Login(props) {\n  const { initialized, setInitialized } = props;\n  const { loggedIn } = props;\n\n  return (\n    <>\n      <Container\n        style={{ display: \"flex\", alignItems: \"center\" }}\n        className=\"wrapper\"\n      >\n        <Container maxWidth=\"xs\">\n          <Paper\n            style={{ textAlign: \"center\", margin: \"10px\", padding: \"10px\" }}\n          >\n            <img width=\"64px\" height=\"64px\" src={logo} alt=\"logo\" />\n            <br />\n            {loggedIn ? \"Welcome\" : \"You are not logged in, sorry!\"}\n          </Paper>\n          <Paper style={{ paddingTop: \"20px\", paddingBottom: \"10px\" }}>\n            {!loggedIn ? (\n              <FirebaseUI setInitialized={setInitialized} />\n            ) : (\n              <UserInit initialized={initialized} />\n            )}\n          </Paper>\n        </Container>\n      </Container>\n      <div></div>\n    </>\n  );\n}\n","/Users/hajin/Projects/NZPMC/app/src/firebase-component/Firebase.js",[],"/Users/hajin/Projects/NZPMC/app/src/main-component/NZPMC.js",["86","87","88","89","90"],"import React, { useState } from \"react\";\nimport QuestionPage from \"./component/currentquestion/QuestionPage\";\nimport NavBar from \"./component/NavBar\";\nimport UserInfo from \"./component/userpage/UserInfo\";\nimport QuestionList from \"./component/questionlist/QuestionList\";\nimport { Redirect } from \"react-router-dom\";\nimport Grid from \"@material-ui/core/Grid\";\nconst pageStates = {\n  QUESTIONSLIST: 0,\n  CURRENTQUESTION: 1,\n  USERPAGE: 2,\n};\n\nfunction NZPMC(props) {\n  const { loggedIn } = props;\n  return (\n    <>\n      {loggedIn ? (\n        <div\n          style={{\n            backgroundColor: \"#1ABC9C\",\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            height: \"100vh\",\n          }}\n        >\n          <Grid container item xs={12} spacing={3}>\n            <Grid item xs={12}>\n              <QuestionPage />\n            </Grid>\n          </Grid>\n          {/* \n            <UserInfo loggedIn={loggedIn} /> */}\n        </div>\n      ) : (\n        <Redirect to=\"/\" />\n      )}\n    </>\n  );\n}\n\nexport default NZPMC;\n","/Users/hajin/Projects/NZPMC/app/src/admin-component/Admin.js",[],"/Users/hajin/Projects/NZPMC/app/src/firebase-component/FirebaseUI.js",["91","92"],"import React, { useEffect, useState } from \"react\";\nimport firebase from \"./Firebase\";\nimport \"./Login.css\";\nimport \"firebaseui/dist/firebaseui.css\";\nvar firebaseui = require(\"firebaseui\");\nrequire(\"firebase/auth\");\nrequire(\"firebase/database\");\n\nvar uiConfig = {\n  callbacks: {\n    signInSuccessWithAuthResult: function (authResult, redirectUrl) {\n      console.log(\"success!\");\n      firebase\n        .database()\n        .ref(\"/users/\" + firebase.auth().currentUser.uid + \"/initialized\")\n        .once(\"value\")\n        .then((s) => {\n          console.log(s);\n        });\n\n      return true;\n    },\n    uiShown: function () {\n      // document.getElementById('loader').style.display = 'none';\n    },\n  },\n  signInFlow: \"popup\",\n  signInSuccessUrl: \"/\",\n  signInOptions: [\n    firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n    firebase.auth.EmailAuthProvider.PROVIDER_ID,\n  ],\n  tosUrl: \"https://www.google.com\",\n  privacyPolicyUrl: \"https://www.google.com\",\n};\n\nfunction FirebaseUI(props) {\n  const [math, setMath] = useState(String.raw``);\n  useEffect(() => {\n    var ui =\n      firebaseui.auth.AuthUI.getInstance() ||\n      new firebaseui.auth.AuthUI(firebase.auth());\n    ui.start(\"#firebaseui-auth-container\", uiConfig);\n  }, []);\n  return <div id=\"firebaseui-auth-container\" />;\n}\n\nexport default FirebaseUI;\n","/Users/hajin/Projects/NZPMC/app/src/firebase-component/initialisation/UserInit.js",[],"/Users/hajin/Projects/NZPMC/app/src/firebase-component/initialisation/UserInitForm.js",["93"],"/Users/hajin/Projects/NZPMC/app/src/main-component/component/questionlist/QuestionList.js",[],"/Users/hajin/Projects/NZPMC/app/src/main-component/component/NavBar.js",[],"/Users/hajin/Projects/NZPMC/app/src/main-component/component/userpage/UserInfo.js",["94"],"import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport UserDetailsAndInstructions from \"./UserDetailsAndInstructions\";\nimport Button from \"@material-ui/core/Button\";\nimport firebase from \"../../../firebase-component/Firebase\";\n\nexport default function UserInfo(props) {\n  const { loggedIn } = props;\n  function signOut() {\n    firebase.auth().signOut();\n  }\n  return (\n    <>\n      {loggedIn ? (\n        <>\n          <UserDetailsAndInstructions />\n          <Button\n            onClick={signOut}\n            style={{\n              color: \"white\",\n              backgroundColor: \"yellowgreen\",\n              margin: \"0 10px 0 0\",\n            }}\n          >\n            Sign Out\n          </Button>\n          <Button\n            style={{\n              color: \"white\",\n              backgroundColor: \"crimson\",\n              margin: \"0 0 0 10px\",\n            }}\n          >\n            Submit the Whole Exam\n          </Button>\n        </>\n      ) : (\n        <Redirect to=\"/\" />\n      )}\n    </>\n  );\n}\n","/Users/hajin/Projects/NZPMC/app/src/main-component/component/currentquestion/QuestionPage.js",["95"],"import React, { useState, useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Question from \"./Question\";\nimport QuestionUserInput from \"./QuestionUserInput\";\nimport QuestionList from \"../questionlist/QuestionList\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Button from \"@material-ui/core/Button\";\nimport { Typography } from \"@material-ui/core\";\n\nexport default function QuestionPage() {\n  const [timer, setTimer] = useState(\"\");\n  const [navClosed, setNavClosed] = useState(true);\n  const [q, setQ] = useState(null);\n  const [qIndex, setQIndex] = useState(-1);\n  const [questions, setQuestions] = useState([\n    { checked: false, index: 1, prevChoice: -1 },\n    { checked: false, index: 2, prevChoice: -1 },\n    { checked: false, index: 3, prevChoice: -1 },\n    { checked: false, index: 4, prevChoice: -1 },\n    { checked: false, index: 5, prevChoice: -1 },\n    { checked: false, index: 6, prevChoice: -1 },\n    { checked: false, index: 7, prevChoice: -1 },\n    { checked: false, index: 8, prevChoice: -1 },\n    { checked: false, index: 9, prevChoice: -1 },\n  ]);\n\n  setInterval(() => {\n    var countDownDate = new Date(\"Jan 5, 2022 15:37:25\").getTime();\n    var now = new Date().getTime();\n    var distance = countDownDate - now;\n    // var days = Math.floor(distance / (1000 * 60 * 60 * 24));\n    var hours = Math.floor(\n      (distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)\n    );\n    var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\n    var seconds = Math.floor((distance % (1000 * 60)) / 1000);\n    if (seconds.length === 1) {\n      seconds = \"0\" + seconds;\n    }\n    if (minutes.length === 1) {\n      minutes = \"0\" + minutes;\n    }\n    let timeLeft = hours + \":\" + minutes + \":\" + seconds;\n    setTimer(timeLeft);\n  }, 1000);\n\n  return (\n    <>\n      <div\n        style={{\n          height: \"100%\",\n          width: navClosed ? \"0\" : \"40%\",\n          position: \"fixed\",\n          zIndex: \"1\",\n          top: \"0\",\n          left: \"0\",\n          backgroundColor: \"#16A085\",\n          overflowX: \"hidden\",\n          transition: \"0.5s\",\n        }}\n      >\n        <QuestionList\n          setQIndex={setQIndex}\n          setQ={setQ}\n          setNavClosed={setNavClosed}\n          questions={questions}\n        />\n      </div>\n      <Grid container item xs={12} spacing={3}>\n        <Grid item xs={9}>\n          <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n            <Button onClick={() => setNavClosed(false)}>\n              <MenuIcon fontSize=\"large\" />\n              <Typography>View Questions/submit</Typography>\n            </Button>\n            <Typography>Remaining Time: {timer}</Typography>\n          </div>\n\n          <Question q={q} />\n        </Grid>\n        <Grid item xs={3}>\n          <QuestionUserInput\n            qIndex={qIndex}\n            q={q}\n            questions={questions}\n            setQuestions={setQuestions}\n          />\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n","/Users/hajin/Projects/NZPMC/app/src/main-component/component/userpage/UserDetailsAndInstructions.js",[],"/Users/hajin/Projects/NZPMC/app/src/main-component/component/currentquestion/Question.js",["96","97"],"import React from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport MathJax from \"react-mathjax-preview\";\n\nconst math = String.raw`\nQuestion 3: Evaluate the following integral.\n\\begin{align*}\n\\int x + \\frac{x^2}{2} dx\n\\end{align*}\n\n`;\n\nexport default function Question() {\n  return (\n    <div style={{ margin: \"0 0 0 10px\" }}>\n      <Paper\n        style={{\n          margin: \"0 0 15px 0\",\n          padding: \"10px\",\n          backgroundColor: \"white\",\n          textAlign: \"left\",\n        }}\n      >\n        <br />\n        <MathJax math={math} />\n      </Paper>\n\n      <Paper style={{ backgroundColor: \"white\", maxHeight: \"100%\" }}>\n        <img\n          style={{ margin: \"10px\", maxHeight: \"80%\", maxWidth: \"80%\" }}\n          src=\"https://latex.artofproblemsolving.com/b/a/8/ba8f53ff09cff83d00d941d5b41119a3126a7977.png\"\n        />\n      </Paper>\n    </div>\n  );\n}\n","/Users/hajin/Projects/NZPMC/app/src/main-component/component/currentquestion/QuestionUserInput.js",["98","99"],"import React, { useState } from \"react\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Button from \"@material-ui/core/Button\";\nimport { submitChoice } from \"../../../firebase-component/FirebaseRequests\";\nimport Grid from \"@material-ui/core/Grid\";\n// const options = {\n//   1: \"Anvily\",\n//   2: \"Jaemin\",\n//   3: \"Hajin\",\n//   4: \"Hello\",\n// };\n\nexport default function QuestionUserInput(props) {\n  const { questions, setQuestions, qIndex } = props;\n  const [choice, setChoice] = useState(-1);\n  const onActionSave = () => {\n    console.log(\"hello!\");\n    console.log(qIndex);\n    if (qIndex) {\n      submitChoice(qIndex, choice)\n        .then(() => console.log(\"hello my friend\"))\n        .catch((err) => console.log(err));\n    } else {\n      console.log(\"nothing had been selected, so nothing saved!\");\n    }\n    console.log(\"hi again!\");\n    let prevQuestions = [...questions];\n    prevQuestions[qIndex - 1].checked = true;\n    prevQuestions[qIndex - 1].prevChoice = choice;\n    setQuestions(prevQuestions);\n    // get question number\n  };\n  const onChoiceClicked = (choice) => {\n    setChoice(choice);\n  };\n  return (\n    <>\n      <List>\n        <ListItem>Choose your answer:</ListItem>\n        {[1, 2, 3, 4, 5].map((key) => {\n          return (\n            <ListItem\n              button\n              style={{\n                backgroundColor: choice === key ? \"gray\" : \"white\",\n                padding: \"20px\",\n                margin: \"5px\",\n                color: choice === key ? \"white\" : \"black\",\n              }}\n              onClick={() => {\n                onChoiceClicked(key);\n              }}\n            >\n              {props.q === null || props.q === undefined\n                ? \"***\"\n                : props.q.options[key]}\n            </ListItem>\n          );\n        })}\n\n        <ListItem\n          style={{\n            display: \"flex\",\n            alignItem: \"center\",\n            justifyContent: \"center\",\n          }}\n        >\n          <Button\n            style={{\n              backgroundColor: \"#008f68\",\n              color: \"white\",\n              padding: \"15px\",\n              minWidth: \"100px\",\n              maxWidth: \"100%\",\n            }}\n            onClick={onActionSave}\n          >\n            Save Choice <br />{\" \"}\n          </Button>\n        </ListItem>\n        <ListItem\n          style={{\n            display: \"flex\",\n            alignItem: \"center\",\n            justifyContent: \"center\",\n          }}\n        >\n          <div>\n            {qIndex != -1\n              ? questions[qIndex - 1].prevChoice === -1\n                ? \"\"\n                : \"Current choice: \" + questions[qIndex - 1].prevChoice\n              : \"\"}\n          </div>\n        </ListItem>\n      </List>\n    </>\n  );\n}\n","/Users/hajin/Projects/NZPMC/app/src/firebase-component/FirebaseRequests.js",[],{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":1,"column":17,"nodeType":"106","messageId":"107","endLine":1,"endColumn":25},{"ruleId":"104","severity":1,"message":"108","line":9,"column":8,"nodeType":"106","messageId":"107","endLine":9,"endColumn":16},{"ruleId":"104","severity":1,"message":"105","line":1,"column":17,"nodeType":"106","messageId":"107","endLine":1,"endColumn":25},{"ruleId":"104","severity":1,"message":"109","line":3,"column":8,"nodeType":"106","messageId":"107","endLine":3,"endColumn":14},{"ruleId":"104","severity":1,"message":"110","line":4,"column":8,"nodeType":"106","messageId":"107","endLine":4,"endColumn":16},{"ruleId":"104","severity":1,"message":"111","line":5,"column":8,"nodeType":"106","messageId":"107","endLine":5,"endColumn":20},{"ruleId":"104","severity":1,"message":"112","line":8,"column":7,"nodeType":"106","messageId":"107","endLine":8,"endColumn":17},{"ruleId":"104","severity":1,"message":"113","line":38,"column":10,"nodeType":"106","messageId":"107","endLine":38,"endColumn":14},{"ruleId":"104","severity":1,"message":"114","line":38,"column":16,"nodeType":"106","messageId":"107","endLine":38,"endColumn":23},{"ruleId":"104","severity":1,"message":"115","line":48,"column":24,"nodeType":"106","messageId":"107","endLine":48,"endColumn":38},{"ruleId":"104","severity":1,"message":"116","line":3,"column":8,"nodeType":"106","messageId":"107","endLine":3,"endColumn":34},{"ruleId":"104","severity":1,"message":"117","line":1,"column":27,"nodeType":"106","messageId":"107","endLine":1,"endColumn":36},{"ruleId":"104","severity":1,"message":"113","line":5,"column":7,"nodeType":"106","messageId":"107","endLine":5,"endColumn":11},{"ruleId":"118","severity":1,"message":"119","line":35,"column":9,"nodeType":"120","endLine":38,"endColumn":11},{"ruleId":"104","severity":1,"message":"121","line":6,"column":8,"nodeType":"106","messageId":"107","endLine":6,"endColumn":12},{"ruleId":"122","severity":1,"message":"123","line":90,"column":21,"nodeType":"124","messageId":"125","endLine":90,"endColumn":23},"no-native-reassign",["126"],"no-negated-in-lhs",["127"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'firebase' is defined but never used.","'NavBar' is defined but never used.","'UserInfo' is defined but never used.","'QuestionList' is defined but never used.","'pageStates' is assigned a value but never used.","'math' is assigned a value but never used.","'setMath' is assigned a value but never used.","'setInitialized' is assigned a value but never used.","'UserDetailsAndInstructions' is defined but never used.","'useEffect' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Grid' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]